security:
    encoders:
        App\Entity\Customer:
            algorithm: auto
        App\Entity\Admin:
            algorithm: auto
    providers:
        jwt_provider:
            id: App\Security\JwtPayloadUserProvider
        admin_provider:
            entity: { class: App\Entity\Admin, property: email }
        customer_provider:
            entity: { class: App\Entity\Customer, property: email }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        admin-login:
            pattern: ^/admin-login
            anonymous: true
            provider: admin_provider
            json_login:
                check_path: /admin-login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        customer-login:
            pattern: ^/customer-login
            anonymous: true
            provider: customer_provider
            json_login:
                check_path: /customer-login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        main:
            pattern: ^
            stateless: true
            anonymous: true
            provider: jwt_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
    access_control:
         - { path: ^/admins/*, roles: ROLE_SUPER_ADMIN }
         - { path: ^/customers/*, roles: [ROLE_SUPER_ADMIN, ROLE_CUSTOMER] }
